import{_ as t,o,c as r,Q as a}from"./chunks/framework.6ed370c1.js";const u=JSON.parse('{"title":"3D高度","description":"","frontmatter":{},"headers":[],"relativePath":"operation/3d/3D高度.md","filePath":"operation/3d/3D高度.md"}'),n={name:"operation/3d/3D高度.md"},l=a('<h1 id="_3d高度" tabindex="-1">3D高度 <a class="header-anchor" href="#_3d高度" aria-label="Permalink to &quot;3D高度&quot;">​</a></h1><h2 id="算子功能" tabindex="-1">算子功能 <a class="header-anchor" href="#算子功能" aria-label="Permalink to &quot;算子功能&quot;">​</a></h2><p>采用选定的滤波方法，计算输入区域的高度。可以输出的高度选项有最小值、最大值、均值、中值、标准差、百分比</p><h2 id="算子输入参数" tabindex="-1">算子输入参数 <a class="header-anchor" href="#算子输入参数" aria-label="Permalink to &quot;算子输入参数&quot;">​</a></h2><ul><li><p><strong>输入图像</strong>：图像来源的寄存器编号</p></li><li><p><strong>离群点滤波算法</strong>：</p><ul><li><strong>百分位数滤波</strong>： <ul><li><strong>概述</strong>：根据输入的百分比计算出高百分位数和低百分位数，仅保留两者之间满足条件的点云</li><li><strong>高低去除百分比</strong>：设置需要去除的点数百分比，默认为10%，意味着只保留中间80%的点。</li></ul></li></ul></li><li><p><strong>高度1模式、高度2模式</strong>：</p><ul><li><strong>最小值</strong>：输出高度最小值</li><li><strong>最大值</strong>：输出高度最大值</li><li><strong>均值</strong>：输出高度均值</li><li><strong>中值</strong>：输出高度中位数</li><li><strong>标准差</strong>：输出高度值的统计标准差，反映高度值的离散程度。</li><li><strong>百分位数</strong>：输出第a%处的高度值百分位数，其中a为输入的百分比。</li></ul></li><li><p><strong>百分比1、百分比2</strong>：只在百分比高度模式下，该输入值有效。</p></li></ul>',5),i=[l];function s(e,_,d,g,c,p){return o(),r("div",null,i)}const m=t(n,[["render",s]]);export{u as __pageData,m as default};
