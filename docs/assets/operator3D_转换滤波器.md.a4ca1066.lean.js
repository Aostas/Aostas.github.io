import{_ as l,v as i,b as a,R as e}from"./chunks/framework.eea9f507.js";const p=JSON.parse('{"title":"转换滤波器","description":"","frontmatter":{},"headers":[],"relativePath":"operator3D/转换滤波器.md","filePath":"operator3D/转换滤波器.md"}'),t={name:"operator3D/转换滤波器.md"},r=e('<h1 id="转换滤波器" tabindex="-1">转换滤波器 <a class="header-anchor" href="#转换滤波器" aria-label="Permalink to &quot;转换滤波器&quot;">​</a></h1><h2 id="算子功能" tabindex="-1">算子功能 <a class="header-anchor" href="#算子功能" aria-label="Permalink to &quot;算子功能&quot;">​</a></h2><p>对输入的点云进行仿射变换，输出变换后的点云</p><h2 id="算子输入参数" tabindex="-1">算子输入参数 <a class="header-anchor" href="#算子输入参数" aria-label="Permalink to &quot;算子输入参数&quot;">​</a></h2><h3 id="变换模式" tabindex="-1">变换模式 <a class="header-anchor" href="#变换模式" aria-label="Permalink to &quot;变换模式&quot;">​</a></h3><ul><li>平移 <ul><li>平移X：沿着X轴平移的距离，正数代表向X轴正方向平移；负数代表向负方向平移。</li><li>平移Y：同理</li><li>平移Z：同理</li><li>反转平移：若勾选，向相反方向平移。</li></ul></li><li>旋转 <ul><li>绕X轴旋转：正数代表围绕X轴逆时针旋转；负数代表围绕X轴顺时针旋转。</li><li>绕Y轴旋转：同理</li><li>绕Z轴旋转：同理</li><li>反转旋转：若勾选，向相反方向进行旋转。</li></ul></li><li>缩放 <ul><li>缩放X：对X坐标进行缩放，负数代表对镜像后的点云X坐标进行缩放。</li><li>缩放Y：同理</li><li>缩放Z：同理</li><li>翻转缩放：对输入的点云进行镜像后，再进行缩放。</li></ul></li><li>剪切 <ul><li>剪切轴：沿着选定的坐标轴方向对点云进行斜拉。 <ul><li>剪切X相对于Y：根据点云Y坐标值对X坐标进行变换。</li><li>剪切X相对于Z：根据点云Z坐标值对X坐标进行变换。</li><li>剪切Y相对于X：根据点云Y坐标值对X坐标进行变换。</li><li>剪切Y相对于Z：根据点云Y坐标值对Z坐标进行变换。</li><li>剪切Z相对于X：根据点云Z坐标值对X坐标进行变换。</li><li>剪切Z相对于Y：根据点云Z坐标值对Y坐标进行变换。</li></ul></li><li>剪切单位：对某一坐标进行变换时的比例因子量纲。 <ul><li>原始剪切因子：无量纲。</li><li>剪切角：输入值单位为度。</li></ul></li><li>反转剪切：沿着选定的坐标轴的相反方向对点云进行写啦。</li></ul></li><li>镜像 <ul><li>X：将点云关于X轴进行镜像</li><li>Y：将点云关于Y轴进行镜像</li><li>Z：将点云关于Z轴进行镜像</li></ul></li></ul>',6),o=[r];function s(u,n,h,d,c,_){return i(),a("div",null,o)}const Y=l(t,[["render",s]]);export{p as __pageData,Y as default};
