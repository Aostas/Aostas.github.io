import{_ as o,o as t,c as e,Q as r}from"./chunks/framework.6ed370c1.js";const s="/docs/assets/AABB与OBB.e37dc7bd.png",m=JSON.parse('{"title":"3D体积","description":"","frontmatter":{},"headers":[],"relativePath":"operation/3d/3D体积.md","filePath":"operation/3d/3D体积.md","lastUpdated":1705048034000}'),a={name:"operation/3d/3D体积.md"},l=r('<h1 id="_3d体积" tabindex="-1">3D体积 <a class="header-anchor" href="#_3d体积" aria-label="Permalink to &quot;3D体积&quot;">​</a></h1><h2 id="算子功能" tabindex="-1">算子功能 <a class="header-anchor" href="#算子功能" aria-label="Permalink to &quot;算子功能&quot;">​</a></h2><p>计算给定区域中的点云体积。现阶段提供了2种体积测量算法，分别为根据<code>包围盒</code>计算体积和<code>根据轮廓积分</code>计算体积。</p><hr><p><em><strong>算法开放情况</strong></em>：</p><ul><li>[x] 包围盒</li><li>[x] 轮廓积分</li><li>[ ] 切片积分</li></ul><h2 id="算子输入参数" tabindex="-1">算子输入参数 <a class="header-anchor" href="#算子输入参数" aria-label="Permalink to &quot;算子输入参数&quot;">​</a></h2><ul><li><strong>输入图像</strong>：图像来源的寄存器编号</li><li><strong>区域</strong>：设置体积计算区域</li><li><strong>算法</strong>：现阶段提供了2种体积测量算法，分别为根据<code>包围盒</code>计算体积和<code>根据轮廓积分</code>计算体积。</li><li><strong>包围盒</strong><ul><li><strong>包围盒类型</strong><img src="'+s+'" alt="aabb与obb"><ul><li><strong>轴对齐包围盒</strong></li><li><strong>旋转包围盒</strong></li></ul></li><li><strong>参考高度</strong>：当<code>算法</code>设置为<code>包围盒</code>时，需要设置参考平面的高度 <ul><li><strong>手动</strong>：手动设置参考平面的高度</li><li><strong>寄存器</strong>：从<code>寄存器</code>中获取参考高度</li></ul></li></ul></li><li><strong>轮廓积分</strong>：根据输入的点云轮廓，由每一个点的Z方向高度积分后计算体积。<strong>注意</strong>：该算法要求输入为<code>PCD格式</code>的<em><strong>有序点云</strong></em></li></ul>',8),n=[l];function i(d,c,_,g,h,p){return t(),e("div",null,n)}const b=o(a,[["render",i]]);export{m as __pageData,b as default};
