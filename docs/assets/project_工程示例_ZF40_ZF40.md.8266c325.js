import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.6ed370c1.js";const l="/docs/assets/执行效果.29b21928.png",o="/docs/assets/3D区域.3e1d58eb.png",c="/docs/assets/3D平面.5306fc9d.png",e="/docs/assets/3D方形探针.07ca3d54.png",t="/docs/assets/3D几何交点.49e28526.png",r="/docs/assets/3D几何创建.cfa3831b.png",y="/docs/assets/裁切.e7f776be.png",E="/docs/assets/滤波.a71a0f15.png",i="/docs/assets/BLOB.28cc273f.png",F="/docs/assets/3D高度.8bd231dc.png",b="/docs/assets/3D方形探针2.587ef643.png",P=JSON.parse('{"title":"zf40示例","description":"","frontmatter":{},"headers":[],"relativePath":"project/工程示例/ZF40/ZF40.md","filePath":"project/工程示例/ZF40/ZF40.md","lastUpdated":1705395279000}'),C={name:"project/工程示例/ZF40/ZF40.md"},_=p('<h1 id="zf40示例" tabindex="-1">zf40示例 <a class="header-anchor" href="#zf40示例" aria-label="Permalink to &quot;zf40示例&quot;">​</a></h1><h2 id="一、执行效果" tabindex="-1">一、执行效果 <a class="header-anchor" href="#一、执行效果" aria-label="Permalink to &quot;一、执行效果&quot;">​</a></h2><p><img src="'+l+'" alt="本地图片"><br></p><h2 id="二、初始化" tabindex="-1">二、初始化 <a class="header-anchor" href="#二、初始化" aria-label="Permalink to &quot;二、初始化&quot;">​</a></h2><p>[00]选择<code>Lua脚本语言</code>工具，全局变量初始化，创建待接受数据的csv文件。<br> [01]选择<code>加载点云</code>工具，获取点云。<br></p><h2 id="三、上半部分预处理" tabindex="-1">三、上半部分预处理 <a class="header-anchor" href="#三、上半部分预处理" aria-label="Permalink to &quot;三、上半部分预处理&quot;">​</a></h2><h3 id="_1-拟合平面" tabindex="-1">1.拟合平面 <a class="header-anchor" href="#_1-拟合平面" aria-label="Permalink to &quot;1.拟合平面&quot;">​</a></h3><p>[02]选择<code>3D裁切预处理</code>工具，将点云上半部分裁切复制一份到IM1（IM0不动后面可以再次使用）。</p><p>[03-04]连续选择2次<code>3D区域</code>工具，选择边框部分底面比较平坦的区域，合并成一个区域。<br></p><p><img src="'+o+'" alt="本地图片"><br></p><p>[05]选择<code>3D平面</code>工具，选择上1步计算出的区域，拟合平面。<br></p><p><img src="'+c+'" alt="本地图片"><br></p><h3 id="_2-图像定位" tabindex="-1">2.图像定位 <a class="header-anchor" href="#_2-图像定位" aria-label="Permalink to &quot;2.图像定位&quot;">​</a></h3><p>[06-07]连续两次使用<code>3D方形探针</code>工具，找出下边边与右边。<br></p><p><img src="'+e+'" alt="本地图片"><br></p><p>[08]选择<code>3D几何交点</code>工具，通过读取输入到寄存器中上两步得到的结果，计算出两线交点。<br></p><p><img src="'+t+'" alt="本地图片"><br></p><p>[09-17]继续重复三次以上操作，得到四个顶点的坐标输出到寄存器中。<br></p><p>[18-19]连续选择2次<code>3D几何创建</code>算子，得到左上右下，左下右上两条线并输出。<br></p><p><img src="'+r+'" alt="本地图片"><br></p><p>[20]选择<code>3D几何交点</code>算子，输出两直线交点。<br></p><p>[21]选择<code>3D位置调整</code>工具，选择上1步计算出来的中心点为原点，调整点云的X和Y位置。<br></p><h2 id="四、下半部分预处理" tabindex="-1">四、下半部分预处理 <a class="header-anchor" href="#四、下半部分预处理" aria-label="Permalink to &quot;四、下半部分预处理&quot;">​</a></h2><p>[22-41]此部分处理逻辑和上半部分的一模一样，请参考上一节的流程。</p><h2 id="五、上半部分处理" tabindex="-1">五、上半部分处理 <a class="header-anchor" href="#五、上半部分处理" aria-label="Permalink to &quot;五、上半部分处理&quot;">​</a></h2><h3 id="_1-裁切滤波" tabindex="-1">1.裁切滤波 <a class="header-anchor" href="#_1-裁切滤波" aria-label="Permalink to &quot;1.裁切滤波&quot;">​</a></h3><p>[42]选择<code>3D裁切预处理</code>工具，选择要进行测量的pin的区域，并输出到新的IM3中进行处理。<br></p><p><img src="'+y+'" alt="本地图片"><br></p><p>[43]连续3次<code>3D离群点滤波</code>工具，去除pin周围的一切干扰噪点。<br></p><p><img src="'+E+'" alt="本地图片"><br></p><p>[44]选择<code>3D变换预处理</code>工具，将点云进行90度的旋转。<br></p><h3 id="_2-确定测量起点" tabindex="-1">2.确定测量起点 <a class="header-anchor" href="#_2-确定测量起点" aria-label="Permalink to &quot;2.确定测量起点&quot;">​</a></h3><p>[45]选择<code>3D斑点</code>工具，选择pin的最左边一列作为起始列，找出每一行的第一个点。<br></p><p><img src="'+i+`" alt="本地图片"><br></p><h3 id="_3-循环测量每个pin" tabindex="-1">3.循环测量每个pin <a class="header-anchor" href="#_3-循环测量每个pin" aria-label="Permalink to &quot;3.循环测量每个pin&quot;">​</a></h3><p>[46-49]选择<code>标记</code>工具，记录每一行和每一列的循环标记，并通过脚本获取每一行的起始点坐标。<br></p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">SetVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;SmallpcbPinLoop&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">smallPcbColumn </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">GetVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;SmallPcbColumn&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(smallPcbColumn)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">x, y, z </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">GetPoint</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;PCB_Start&#39; </span><span style="color:#F97583;">..</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">tointeger</span><span style="color:#E1E4E8;">(smallPcbColumn </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">SetPoint</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;SmallpcbColumnStart&#39;</span><span style="color:#E1E4E8;">, x, y, z)</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;SmallpcbColumnStart = &#39;</span><span style="color:#E1E4E8;">, x, y, z)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">SetVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;SmallpcbPinLoop&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">smallPcbColumn </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">GetVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;SmallPcbColumn&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(smallPcbColumn)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">x, y, z </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">GetPoint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;PCB_Start&#39; </span><span style="color:#D73A49;">..</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">tointeger</span><span style="color:#24292E;">(smallPcbColumn </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">SetPoint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;SmallpcbColumnStart&#39;</span><span style="color:#24292E;">, x, y, z)</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;SmallpcbColumnStart = &#39;</span><span style="color:#24292E;">, x, y, z)</span></span></code></pre></div><p>[50]选择<code>Lua语言脚本</code>工具，根据每个pin的位置，计算出对应的Box大小，并绘制在IM3窗口中。<br></p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">pcb_pinsx1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinsy1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinsz1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinex1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_piney1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinez1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinsx2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinsy2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinsz2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinex2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_piney2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinez2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">--先获取一些变量，等待使用</span></span>
<span class="line"><span style="color:#E1E4E8;">cs_x, cs_y, cs_z </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">GetPoint</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;SmallpcbColumnStart&#39;</span><span style="color:#E1E4E8;">)      </span><span style="color:#6A737D;">--起始点</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(cs_x, cs_y, cs_z)</span></span>
<span class="line"><span style="color:#E1E4E8;">smallpcbPinLoop </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">GetVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;SmallpcbPinLoop&#39;</span><span style="color:#E1E4E8;">)            </span><span style="color:#6A737D;">--循环次数</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;smallpcbPinLoop =&quot;</span><span style="color:#E1E4E8;">, smallpcbPinLoop)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinsx </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_x </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> smallpcbPinLoop </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2.55</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.5</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinex </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_x </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> smallpcbPinLoop </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2.55</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.5</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinsx1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pcb_pinsx</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinex1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pcb_pinex</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinsx2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_x </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> (smallpcbPinLoop </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2.55</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.5</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinex2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_x </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> (smallpcbPinLoop </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2.55</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinsy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_y </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.8</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_piney </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_y </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.8</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinsz </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_z </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.1</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinez </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_z </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinsy1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_y </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.8</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_piney1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_y </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.8</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinsz1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_z </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.1</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinez1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_z </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinsy2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_y </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.9</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_piney2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_y </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.9</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinsz2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_z </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.1</span></span>
<span class="line"><span style="color:#E1E4E8;">pcb_pinez2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cs_z </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(pcb_pinsx1, pcb_pinsy1, pcb_pinsz1)</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(pcb_pinsx2, pcb_pinsy2, pcb_pinsz2)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">PushBox</span><span style="color:#E1E4E8;">(pcb_pinsx1, pcb_pinsy1, pcb_pinsz1, pcb_pinex1, pcb_piney1, pcb_pinez1)</span></span>
<span class="line"><span style="color:#79B8FF;">PushBox</span><span style="color:#E1E4E8;">(pcb_pinsx2, pcb_pinsy2, pcb_pinsz2, pcb_pinex2, pcb_piney2, pcb_pinez2)</span></span>
<span class="line"><span style="color:#79B8FF;">DrawBox</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, pcb_pinsx1, pcb_pinsy1, pcb_pinsz1, pcb_pinex1, pcb_piney1, pcb_pinez1)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">pcb_pinsx1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinsy1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinsz1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinex1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">pcb_piney1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinez1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinsx2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinsy2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinsz2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinex2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">pcb_piney2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinez2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">--先获取一些变量，等待使用</span></span>
<span class="line"><span style="color:#24292E;">cs_x, cs_y, cs_z </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">GetPoint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;SmallpcbColumnStart&#39;</span><span style="color:#24292E;">)      </span><span style="color:#6A737D;">--起始点</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(cs_x, cs_y, cs_z)</span></span>
<span class="line"><span style="color:#24292E;">smallpcbPinLoop </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">GetVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;SmallpcbPinLoop&#39;</span><span style="color:#24292E;">)            </span><span style="color:#6A737D;">--循环次数</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;smallpcbPinLoop =&quot;</span><span style="color:#24292E;">, smallpcbPinLoop)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">pcb_pinsx </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_x </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> smallpcbPinLoop </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2.55</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.5</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinex </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_x </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> smallpcbPinLoop </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2.55</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.5</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinsx1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pcb_pinsx</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinex1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pcb_pinex</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinsx2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_x </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (smallpcbPinLoop </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2.55</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.5</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinex2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_x </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (smallpcbPinLoop </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2.55</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">pcb_pinsy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_y </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.8</span></span>
<span class="line"><span style="color:#24292E;">pcb_piney </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_y </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.8</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinsz </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_z </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.1</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinez </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_z </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">pcb_pinsy1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_y </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.8</span></span>
<span class="line"><span style="color:#24292E;">pcb_piney1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_y </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.8</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinsz1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_z </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.1</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinez1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_z </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">pcb_pinsy2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_y </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.9</span></span>
<span class="line"><span style="color:#24292E;">pcb_piney2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_y </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.9</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinsz2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_z </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.1</span></span>
<span class="line"><span style="color:#24292E;">pcb_pinez2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cs_z </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(pcb_pinsx1, pcb_pinsy1, pcb_pinsz1)</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(pcb_pinsx2, pcb_pinsy2, pcb_pinsz2)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">PushBox</span><span style="color:#24292E;">(pcb_pinsx1, pcb_pinsy1, pcb_pinsz1, pcb_pinex1, pcb_piney1, pcb_pinez1)</span></span>
<span class="line"><span style="color:#005CC5;">PushBox</span><span style="color:#24292E;">(pcb_pinsx2, pcb_pinsy2, pcb_pinsz2, pcb_pinex2, pcb_piney2, pcb_pinez2)</span></span>
<span class="line"><span style="color:#005CC5;">DrawBox</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, pcb_pinsx1, pcb_pinsy1, pcb_pinsz1, pcb_pinex1, pcb_piney1, pcb_pinez1)</span></span></code></pre></div><p>[51]选择<code>3D高度</code>工具，选择上1步脚本中创建的box(寄存器中选择)，对该pin的高度进行测量。<br></p><p><img src="`+F+'" alt="本地图片"><br></p><p>[52-53]选择<code>3D方形探针</code>工具，选择第22步脚本中创建的box(寄存器中选择)，对该pin的位置进行测量，输出pin的位置坐标。<br></p><p><img src="'+b+`" alt="本地图片"><br></p><p>[54]选择<code>Lua语言脚本</code>工具，将前3步输出的和高度信息保存到文件中。<br></p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Value_H</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">GetMeasure</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(Value_H)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">x,y,z</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">GetPoint</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(x,y,z)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">fprint</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./pcb.csv&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">string.format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;%.3f,&quot;</span><span style="color:#E1E4E8;">, x))</span></span>
<span class="line"><span style="color:#79B8FF;">fprint</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./pcb.csv&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">string.format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;%.3f,&quot;</span><span style="color:#E1E4E8;">, y))</span></span>
<span class="line"><span style="color:#79B8FF;">fprint</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./pcb.csv&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">string.format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;%.3f,&quot;</span><span style="color:#E1E4E8;">, Value_H))</span></span>
<span class="line"><span style="color:#79B8FF;">fprint</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./pcb.csv&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot; &quot; </span><span style="color:#F97583;">..</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Value_H</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">GetMeasure</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(Value_H)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">x,y,z</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">GetPoint</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(x,y,z)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">fprint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./pcb.csv&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">string.format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;%.3f,&quot;</span><span style="color:#24292E;">, x))</span></span>
<span class="line"><span style="color:#005CC5;">fprint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./pcb.csv&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">string.format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;%.3f,&quot;</span><span style="color:#24292E;">, y))</span></span>
<span class="line"><span style="color:#005CC5;">fprint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./pcb.csv&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">string.format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;%.3f,&quot;</span><span style="color:#24292E;">, Value_H))</span></span>
<span class="line"><span style="color:#005CC5;">fprint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./pcb.csv&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot; &quot; </span><span style="color:#D73A49;">..</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>[55]选择<code>Lua语言脚本</code>工具，循环次数判断，一列结束时，跳转到下一列，所有列都结束后，跳转到None标记，代表此半边pin检测完成。<br></p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">--判断循环次数</span></span>
<span class="line"><span style="color:#E1E4E8;">smallpcbPinLoop </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">GetVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;SmallpcbPinLoop&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#79B8FF;">SetVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;SmallpcbPinLoop&quot;</span><span style="color:#E1E4E8;">, smallpcbPinLoop)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> smallpcbPinLoop </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">    smallPcbColumn </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">GetVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;SmallPcbColumn&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">SetVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;SmallPcbColumn&quot;</span><span style="color:#E1E4E8;">, smallPcbColumn)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> smallPcbColumn </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Jump</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;loop Column1&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">fprint</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./pcb.csv&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Jump</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;None1&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">end</span></span>
<span class="line"><span style="color:#F97583;">elseif</span><span style="color:#E1E4E8;"> smallpcbPinLoop </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Jump</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;loop pin1&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">--判断循环次数</span></span>
<span class="line"><span style="color:#24292E;">smallpcbPinLoop </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">GetVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;SmallpcbPinLoop&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#005CC5;">SetVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;SmallpcbPinLoop&quot;</span><span style="color:#24292E;">, smallpcbPinLoop)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> smallpcbPinLoop </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">    smallPcbColumn </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">GetVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;SmallPcbColumn&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">SetVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;SmallPcbColumn&quot;</span><span style="color:#24292E;">, smallPcbColumn)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> smallPcbColumn </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Jump</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;loop Column1&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">fprint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./pcb.csv&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Jump</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;None1&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#D73A49;">elseif</span><span style="color:#24292E;"> smallpcbPinLoop </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Jump</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;loop pin1&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div><h2 id="六、下半部分处理" tabindex="-1">六、下半部分处理 <a class="header-anchor" href="#六、下半部分处理" aria-label="Permalink to &quot;六、下半部分处理&quot;">​</a></h2><p>[57-71]此部分处理逻辑和上半部分的一模一样，请参考上一节的流程。</p>`,49),u=[_];function d(m,B,D,h,q,A){return n(),a("div",null,u)}const z=s(C,[["render",d]]);export{P as __pageData,z as default};
