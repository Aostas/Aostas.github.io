import{_ as l,v as i,b as a,R as e}from"./chunks/framework.eea9f507.js";const b=JSON.parse('{"title":"3D位置调整","description":"","frontmatter":{},"headers":[],"relativePath":"operator3D/3D位置调整.md","filePath":"operator3D/3D位置调整.md"}'),t={name:"operator3D/3D位置调整.md"},r=e('<h1 id="_3d位置调整" tabindex="-1">3D位置调整 <a class="header-anchor" href="#_3d位置调整" aria-label="Permalink to &quot;3D位置调整&quot;">​</a></h1><h2 id="算子功能" tabindex="-1">算子功能 <a class="header-anchor" href="#算子功能" aria-label="Permalink to &quot;算子功能&quot;">​</a></h2><p>根据输入的位置信息，对点云进行进行平移或者旋转的操作来调整点云的位置。</p><h2 id="算子输入参数" tabindex="-1">算子输入参数 <a class="header-anchor" href="#算子输入参数" aria-label="Permalink to &quot;算子输入参数&quot;">​</a></h2><h3 id="位置调整模式" tabindex="-1">位置调整模式 <a class="header-anchor" href="#位置调整模式" aria-label="Permalink to &quot;位置调整模式&quot;">​</a></h3><ul><li>仅调整位置</li><li>方位调整</li></ul><h3 id="定位参数" tabindex="-1">定位参数 <a class="header-anchor" href="#定位参数" aria-label="Permalink to &quot;定位参数&quot;">​</a></h3><ul><li>转换类型： <ul><li>永久：输出变换后的点云</li><li>临时：输出变换矩阵</li></ul></li><li>选择调整成分： <ul><li>调整X位置：仅将新原点的X坐标调整为0</li><li>调整Y位置：仅将新原点的Y坐标调整为0</li><li>调整Z位置：仅将新原点的Z坐标调整为0</li></ul></li></ul><h3 id="方位调整参数" tabindex="-1">方位调整参数 <a class="header-anchor" href="#方位调整参数" aria-label="Permalink to &quot;方位调整参数&quot;">​</a></h3><ul><li><p>转换类型：</p><ul><li>永久：输出变换后的点云</li><li>临时：输出变换矩阵</li></ul></li><li><p>新方向类型：</p><ul><li>直线：将直线的方向向量作为新的方向</li><li>平面：将平面的法向量作为新的方向</li><li>有向包围盒：将有向包围盒的方向作为新的方向</li><li>旋转：将围绕三个轴旋转的角度转换为的方向向量作为新的方向</li><li>旋转平移：将围绕三个轴的旋转角度转换为的方向向量作为新的方向</li><li>向量：将该向量作为新的方向</li></ul></li><li><p>旋转位置：</p><ul><li>输入新方向类型的中心</li><li>原点(0,0,0)：围绕z轴旋转</li><li>具体位置</li></ul></li><li><p>选择调整成分：</p><ul><li>调整X位置：仅将新原点的X坐标调整为0</li><li>调整Y位置：仅将新原点的Y坐标调整为0</li><li>调整Z位置：仅将新原点的Z坐标调整为0</li></ul></li></ul>',10),o=[r];function h(s,u,n,d,c,p){return i(),a("div",null,o)}const f=l(t,[["render",h]]);export{b as __pageData,f as default};
