import{_ as t,o as a,c as e,Q as s}from"./chunks/framework.6ed370c1.js";const y=JSON.parse('{"title":"输入输出","description":"","frontmatter":{},"headers":[],"relativePath":"script/输入输出.md","filePath":"script/输入输出.md"}'),n={name:"script/输入输出.md"},o=s('<h1 id="输入输出" tabindex="-1">输入输出 <a class="header-anchor" href="#输入输出" aria-label="Permalink to &quot;输入输出&quot;">​</a></h1><h2 id="终端输出" tabindex="-1">终端输出 <a class="header-anchor" href="#终端输出" aria-label="Permalink to &quot;终端输出&quot;">​</a></h2><h3 id="print" tabindex="-1">print <a class="header-anchor" href="#print" aria-label="Permalink to &quot;print&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(content</span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(content</span><span style="color:#005CC5;">...</span><span style="color:#24292E;">)</span></span></code></pre></div><p>输出内容到命令行，不带换行。</p><h4 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>content...</td><td>Any 任何类型</td><td>内容，非文本类型会自动转换为文本，可写多个由<code>,</code>分割，输出时会以制表符分隔</td></tr></tbody></table><h3 id="println" tabindex="-1">println <a class="header-anchor" href="#println" aria-label="Permalink to &quot;println&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(content</span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(content</span><span style="color:#005CC5;">...</span><span style="color:#24292E;">)</span></span></code></pre></div><p>输出内容到命令行，带换行。</p><h4 id="参数-1" tabindex="-1">参数 <a class="header-anchor" href="#参数-1" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>content...</td><td>Any 任何类型</td><td>内容，非文本类型会自动转换为文本，可写多个由<code>,</code>分割，输出时会以制表符分隔</td></tr></tbody></table><h2 id="ascii文件输出" tabindex="-1">ASCII文件输出 <a class="header-anchor" href="#ascii文件输出" aria-label="Permalink to &quot;ASCII文件输出&quot;">​</a></h2><h3 id="fprint" tabindex="-1">fprint <a class="header-anchor" href="#fprint" aria-label="Permalink to &quot;fprint&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">fprint</span><span style="color:#E1E4E8;">(path, content</span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">fprint</span><span style="color:#24292E;">(path, content</span><span style="color:#005CC5;">...</span><span style="color:#24292E;">)</span></span></code></pre></div><p>写到一个ASCII文件的末尾。</p><h4 id="参数-2" tabindex="-1">参数 <a class="header-anchor" href="#参数-2" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>path</td><td>String 字符串</td><td>文件路径</td></tr><tr><td>content...</td><td>Any 任何类型</td><td>内容，非文本类型会自动转换为文本，可写多个由<code>,</code>分割，输出时会以制表符分隔</td></tr></tbody></table><h3 id="fwrite" tabindex="-1">fwrite <a class="header-anchor" href="#fwrite" aria-label="Permalink to &quot;fwrite&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">fwrite</span><span style="color:#E1E4E8;">(path, content</span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">fwrite</span><span style="color:#24292E;">(path, content</span><span style="color:#005CC5;">...</span><span style="color:#24292E;">)</span></span></code></pre></div><p>覆写一个ASCII文件。</p><h4 id="参数-3" tabindex="-1">参数 <a class="header-anchor" href="#参数-3" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>path</td><td>String 字符串</td><td>文件路径</td></tr><tr><td>content...</td><td>Any 任何类型</td><td>内容，非文本类型会自动转换为文本，可写多个由<code>,</code>分割，输出时会以制表符分隔</td></tr></tbody></table><h3 id="fread" tabindex="-1">fread <a class="header-anchor" href="#fread" aria-label="Permalink to &quot;fread&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">content </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fread</span><span style="color:#E1E4E8;">(path)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">content </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fread</span><span style="color:#24292E;">(path)</span></span></code></pre></div><p>读取一个ASCII文件的内容。</p><h4 id="参数-4" tabindex="-1">参数 <a class="header-anchor" href="#参数-4" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>path</td><td>String 字符串</td><td>文件路径</td></tr></tbody></table><h4 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h4><table><thead><tr><th>返回值</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>content</td><td>String 字符串</td><td>文本内容</td></tr></tbody></table>',30),l=[o];function r(p,d,c,i,h,b){return a(),e("div",null,l)}const E=t(n,[["render",r]]);export{y as __pageData,E as default};
