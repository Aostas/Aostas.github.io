import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.6ed370c1.js";const l="/docs/assets/执行效果.fbc3fe17.png",o="/docs/assets/滤波.e7de2838.png",t="/docs/assets/区域.692c78e0.png",e="/docs/assets/3D平面.dea4f90d.png",c="/docs/assets/3D方形探针.bc79a181.png",r="/docs/assets/3D几何交点.74e75cb7.png",E="/docs/assets/3D几何创建.fb63a706.png",y="/docs/assets/3D位置调整.041b7c79.png",i="/docs/assets/3D高度.627fdb59.png",F="/docs/assets/HMI1.0c4d0807.png",u="/docs/assets/HMI2.32586805.png",C="/docs/assets/HMI3.aa82a0c2.png",H=JSON.parse('{"title":"JST3W示例","description":"","frontmatter":{},"headers":[],"relativePath":"project/工程示例/JST3W/JST3W.md","filePath":"project/工程示例/JST3W/JST3W.md","lastUpdated":1705395279000}'),d={name:"project/工程示例/JST3W/JST3W.md"},_=p('<h1 id="jst3w示例" tabindex="-1">JST3W示例 <a class="header-anchor" href="#jst3w示例" aria-label="Permalink to &quot;JST3W示例&quot;">​</a></h1><h2 id="一、执行效果" tabindex="-1">一、执行效果 <a class="header-anchor" href="#一、执行效果" aria-label="Permalink to &quot;一、执行效果&quot;">​</a></h2><p><img src="'+l+'" alt="本地图片"><br></p><h2 id="二、初始化" tabindex="-1">二、初始化 <a class="header-anchor" href="#二、初始化" aria-label="Permalink to &quot;二、初始化&quot;">​</a></h2><p>[00]选择<code>Lua脚本语言</code>工具，全局变量初始化。<br> [01]选择<code>加载点云</code>工具，获取点云。<br></p><h2 id="三、预处理" tabindex="-1">三、预处理 <a class="header-anchor" href="#三、预处理" aria-label="Permalink to &quot;三、预处理&quot;">​</a></h2><p>[02]选择<code>3D离群点滤波</code>工具，对点云图进行无效点过滤。<br></p><p><img src="'+o+'" alt="本地图片"><br></p><p>[03-04]连续两次使用<code>3D区域</code>工具，选择顶部四边框部分区域，合并成一块大的区域。<br></p><p><img src="'+t+'" alt="本地图片"><br></p><p>[05]选择<code>3D平面</code>工具，选择上1步计算出的区域，拟合平面。<br></p><p><img src="'+e+'" alt="本地图片"><br></p><p>[07-08]连续两次使用<code>3D方形探针</code>工具，找出上边与左边。<br></p><p><img src="'+c+'" alt="本地图片"><br></p><p>[09]选择<code>3D几何交点</code>工具，通过读取输入到寄存器中上两步得到的结果，计算出两线交点。<br></p><p><img src="'+r+'" alt="本地图片"><br></p><p>[10-20]继续重复三次以上操作，找出左上左下右上右下四个顶点并输出到寄存器中,选择<code>3D几何创建</code>工具，将左上顶点与右下顶点，左下顶点与右上顶点分别连成两条直线并输出到寄存器中。<br></p><p><img src="'+E+'" alt="本地图片"><br></p><p>[21]选择<code>3D几何交点</code>工具，将两次3D几何创建得到的直线测出其交点并输出到寄存器中。<br></p><p>[22]选择<code>3D位置调整</code>工具，选择上1步计算出来的中心点为原点，调整点云的X和Y位置。<br></p><p><img src="'+y+'" alt="本地图片"><br></p><p>[23-25]连续使用3次<code>3D高度</code>工具分别测出3个pin针的结果。<br></p><p><img src="'+i+`" alt="本地图片"><br></p><p>[26]将结果与全局变量进行绑定，方便对于HMI的数据展示。<br></p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Hello AI-Vision!&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">pinState </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {}   </span><span style="color:#6A737D;">--记录所有pin的高度状态，1-ok，0-ng</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">do</span></span>
<span class="line"><span style="color:#E1E4E8;">    currentPin </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">GetRecipeSet</span><span style="color:#E1E4E8;">(i)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    pinHightMax </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> currentPin.</span><span style="color:#B392F0;">Hight</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> currentPin.</span><span style="color:#B392F0;">HightMax</span></span>
<span class="line"><span style="color:#E1E4E8;">    pinHightMin </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> currentPin.</span><span style="color:#B392F0;">Hight</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> currentPin.</span><span style="color:#B392F0;">HightMin</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    pinH </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">GetMeasure</span><span style="color:#E1E4E8;">((</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> i) </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">--从寄存器中获取pin的高度值</span></span>
<span class="line"><span style="color:#E1E4E8;">    valueH </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">math.floor</span><span style="color:#E1E4E8;">(pinH </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#F97583;">^</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#F97583;">^</span><span style="color:#79B8FF;">3</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> valueH </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> pinHightMax </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> valueH </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> pinHightMin </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">        pinState[</span><span style="color:#F97583;">#</span><span style="color:#E1E4E8;">pinState </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">        pinState[</span><span style="color:#F97583;">#</span><span style="color:#E1E4E8;">pinState </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">end</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">SetVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;value_h&quot; </span><span style="color:#F97583;">..</span><span style="color:#E1E4E8;"> (i </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">), valueH)</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(pinState)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> pinState[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> pinState[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> pinState[</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">    ok_count </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">GetVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ok_count&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">SetVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ok_count&quot;</span><span style="color:#E1E4E8;">, ok_count)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ok = &quot;</span><span style="color:#E1E4E8;">, ok_count)</span></span>
<span class="line"><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">    ng_count </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">GetVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ng_count&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">SetVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ng_count&quot;</span><span style="color:#E1E4E8;">, ng_count)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ng = &quot;</span><span style="color:#E1E4E8;">, ng_count)</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    total_count </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">GetVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;total_count&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">SetVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;total_count&quot;</span><span style="color:#E1E4E8;">, total_count)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;total = &quot;</span><span style="color:#E1E4E8;">, total_count)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    log_context </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;生产总数: &quot; </span><span style="color:#F97583;">..</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">math.floor</span><span style="color:#E1E4E8;">(total_count)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">SetVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;log_context&quot;</span><span style="color:#E1E4E8;">, log_context)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Hello AI-Vision!&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">pinState </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}   </span><span style="color:#6A737D;">--记录所有pin的高度状态，1-ok，0-ng</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">do</span></span>
<span class="line"><span style="color:#24292E;">    currentPin </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">GetRecipeSet</span><span style="color:#24292E;">(i)</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    pinHightMax </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> currentPin.</span><span style="color:#6F42C1;">Hight</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> currentPin.</span><span style="color:#6F42C1;">HightMax</span></span>
<span class="line"><span style="color:#24292E;">    pinHightMin </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> currentPin.</span><span style="color:#6F42C1;">Hight</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> currentPin.</span><span style="color:#6F42C1;">HightMin</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    pinH </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">GetMeasure</span><span style="color:#24292E;">((</span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> i) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">        </span><span style="color:#6A737D;">--从寄存器中获取pin的高度值</span></span>
<span class="line"><span style="color:#24292E;">    valueH </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">math.floor</span><span style="color:#24292E;">(pinH </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">3</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> valueH </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> pinHightMax </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> valueH </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> pinHightMin </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">        pinState[</span><span style="color:#D73A49;">#</span><span style="color:#24292E;">pinState </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">        pinState[</span><span style="color:#D73A49;">#</span><span style="color:#24292E;">pinState </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">SetVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;value_h&quot; </span><span style="color:#D73A49;">..</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">), valueH)</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(pinState)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> pinState[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> pinState[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> pinState[</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">    ok_count </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">GetVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ok_count&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">SetVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ok_count&quot;</span><span style="color:#24292E;">, ok_count)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ok = &quot;</span><span style="color:#24292E;">, ok_count)</span></span>
<span class="line"><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">    ng_count </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">GetVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ng_count&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">SetVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ng_count&quot;</span><span style="color:#24292E;">, ng_count)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ng = &quot;</span><span style="color:#24292E;">, ng_count)</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    total_count </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">GetVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;total_count&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">SetVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;total_count&quot;</span><span style="color:#24292E;">, total_count)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;total = &quot;</span><span style="color:#24292E;">, total_count)</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    log_context </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;生产总数: &quot; </span><span style="color:#D73A49;">..</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">math.floor</span><span style="color:#24292E;">(total_count)</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">SetVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;log_context&quot;</span><span style="color:#24292E;">, log_context)</span></span></code></pre></div><h2 id="四、hmi" tabindex="-1">四、HMI <a class="header-anchor" href="#四、hmi" aria-label="Permalink to &quot;四、HMI&quot;">​</a></h2><h3 id="_1-预览效果" tabindex="-1">1.预览效果 <a class="header-anchor" href="#_1-预览效果" aria-label="Permalink to &quot;1.预览效果&quot;">​</a></h3><p><img src="`+F+'" alt="本地图片"><br></p><h3 id="_2-数据绑定" tabindex="-1">2.数据绑定 <a class="header-anchor" href="#_2-数据绑定" aria-label="Permalink to &quot;2.数据绑定&quot;">​</a></h3><p><img src="'+u+'" alt="本地图片"><br></p><p><img src="'+C+'" alt="本地图片"><br></p>',31),h=[_];function D(g,b,q,A,B,m){return n(),a("div",null,h)}const f=s(d,[["render",D]]);export{H as __pageData,f as default};
